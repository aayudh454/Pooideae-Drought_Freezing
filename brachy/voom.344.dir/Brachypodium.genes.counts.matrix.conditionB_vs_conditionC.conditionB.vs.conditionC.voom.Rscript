library(edgeR)
library(limma)

data = read.table("/gpfs1/home/a/a/aadas/nassellaBrachy_drought_freezing/deseq_output/brachy/Brachypodium.genes.counts.matrix", header=T, row.names=1, com='')
col_ordering = c(4,5,6,7,8,9)
rnaseqMatrix = data[,col_ordering]
rnaseqMatrix = round(rnaseqMatrix)
rnaseqMatrix = rnaseqMatrix[rowSums(rnaseqMatrix)>=2,]
conditions = factor(c(rep("conditionB", 3), rep("conditionC", 3)))

design = model.matrix(~conditions)
## TMM normalize data
lib_sizes = colSums(rnaseqMatrix)
tmm_norm_factors = calcNormFactors(rnaseqMatrix, method='TMM')
x = DGEList(counts=rnaseqMatrix)
# voom transformation
y = voom(x, design, lib.size=lib_sizes*tmm_norm_factors, plot=F)
fit = eBayes(lmFit(y,design))
tTags = topTable(fit,coef=2,number=Inf)
# output results, including average expression val for each feature
c = cpm(x)
m = apply(c, 1, mean)
tTags2 = cbind(tTags, logCPM=log2(m[rownames(tTags)]))
DE_matrix = data.frame(logFC=tTags$logFC, logCPM=tTags2$logCPM, PValue=tTags$'P.Value', FDR=tTags$'adj.P.Val')
rownames(DE_matrix) = rownames(tTags)
write.table(DE_matrix, file='Brachypodium.genes.counts.matrix.conditionB_vs_conditionC.voom.DE_results', sep='	', quote=F, row.names=T)
# MA and volcano plots
source("/gpfs1/home/a/a/aadas/Bin/trinityrnaseq-2.1.1/Analysis/DifferentialExpression/R/rnaseq_plot_funcs.R")
pdf("Brachypodium.genes.counts.matrix.conditionB_vs_conditionC.voom.DE_results.MA_n_Volcano.pdf")
plot_MA_and_Volcano(tTags2$logCPM, tTags$logFC, tTags$'adj.P.Val')
dev.off()
